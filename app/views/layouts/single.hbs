<style>

</style>
<div class="container">
    <div class="row">
        <div id="back-to-map" class="col-xs-12">
            <a href="/" class="btn btn-primary"><span class="fa fa-arrow-left"></span> Back to map</a>
        </div>
    </div>
</div>
<div class="container map-container single">
    <div class="row">
        <div class="col-xs-12 col-sm-4">
            <div class="map-application">
                <div id="map" class="map"></div>
            </div>
        </div>
        <div class="col-xs-12 col-sm-8 trail-details-container">
            {{> trail-details}}
        </div>
    </div>
    <div class="row">
        <div class="col-xs-12">
            <h3 style="margin-bottom: 0">Elevation Profile</h3><span>Hover to show location on map</span>
        </div>
        <div class="col-xs-12" style="height: 130px">
            <div id="elevation-div"></div>
        </div>
    </div>
</div>
<div class="container">
    <div class="col-xs-12 col-sm-4">
<!--//facebook login button goes here   -->
    </div>
    <div class="col-xs-12">
        <div id="comments-container"></div>
    </div>
</div>

<script>
    $(document).on('ready', function() {
        GeoLocation(mapModule.init);

        $('#elevation-div').find('.elevation').addClass('leaflet-control');
        $('#loginform').submit(function (e) {
            e.preventDefault();
            commentModule.login();
        });
        $('#facebook-login').on('click',function(e){
            e.preventDefault();
            commentModule.login("facebook");
        });
        $('.logout-link').on('click', function(e){
            e.preventDefault();
            commentModule.logout();
        });
        $('#loginPassword').on('hidden.bs.modal', function () {
            $(this).find('.bg-danger').remove();
        });

        commentModule.firebaseRef.onAuth(function(authData) {
            commentModule.checkLogin();
            commentModule.retrieveComments(commentModule.initComments);
        });
    });
        var commentModule = (function(){
            var options = {};
            var local = {
             loggedIn: false
            };
            options.commentsArray = [];
            options.firebaseRef = new Firebase("https://shasta-bike-map.firebaseio.com");
            options.commentsRef = options.firebaseRef.child(decodeURI(window.location.pathname).replace("/", "")+"/comments");
            options.retrieveComments = function(callback){
                options.commentsRef.once("value", function(snapshot) {
                    snapshot.forEach(function(childSnapshot) {
                        options.commentsArray.push(childSnapshot.val());
                    });
                    if(callback) callback()
                }, function (errorObject) {
                    console.log("The read failed: " + errorObject.code);
                });
            };

            options.initComments = function(){
                $('#comments-container').comments({
                    enableEditing: true,
                    currentUserIsAdmin: local.loggedIn,
                    enableDeleting: true,
                    forceResponsive: true,
                    enableDeletingCommentWithReplies: true,
                    profilePictureURL: commentModule.user ? commentModule.user.profilePictureURL :'http://bikeshasta.org/wp-content/themes/bikeshasta/images/logo_circle.jpg',
                    getComments: function (success, error) {
                        success(options.commentsArray);
                    },
                    postComment: function (data, success, error) {
                        if(!commentModule.user) {
                            $('#loginPassword').modal('show');
                            return false;
                        }
                        var commentId = data.id;
                        data.fullname = commentModule.user.name;
                        data.profile_picture_url = commentModule.user.profilePictureURL;
                        data.created_by_current_user = false;
                        success(data);
                        return false;
                        options.commentsRef.child(commentId).set(data);
                    },
                    putComment: function (data, success, error) {
                        var commentId = data.id;
                        console.log(data);
                        options.commentsRef.child(commentId).set(data);
                        success(data);
                    },
                    deleteComment: function (data, success, error) {
                        var commentId = data.id;
                        options.commentsRef.child(commentId).remove();
                        success();
                    },
                    upvoteComment: function (data, success, error) {
                        var commentId = data.id;
                        options.commentsRef.child(commentId).set(data);
                        success(data);
                    }
                });
            };
            options.login = function(method){
                if(method === "facebook") {
                    options.firebaseRef.authWithOAuthPopup("facebook", function (error, authData) {
                        if (error) {
                            console.log("Login Failed!", error);
                        } else {
                            console.log("Authenticated successfully with payload:", authData);
                            $('#loginPassword').modal('hide');
                        }
                    });
                } else {
                    options.firebaseRef.authWithPassword({
                        "email": $('#email-login').val(),
                        "password": $('#password-login').val()
                    }, function(error, authData) {
                        if (error) {
                            console.log("Login Failed!", error);
                            $('#loginPassword .modal-body').prepend('<span class="bg-danger bad-login"><b class="fa fa-warning"></b> '+error+'</span> ')
                            $('#loginPassword').modal('show');
                        } else {
                            local.loggedIn = true;
                            $('#loginPassword').modal('hide');
                        }
                    });
                }
            };
            options.logout = function(){
                options.firebaseRef.unauth();
                options.checkLogin();
                commentModule.user = null;
                local.loggedIn = false;
                bootbox.alert("<span class=''>You have been successfully logged out</span>");
                options.initComments()
            };




            options.checkLogin = function(){
                var authData = commentModule.firebaseRef.getAuth();
                if (authData) {
                    if(authData.provider === "facebook") {
                        commentModule.user = {
                            name :authData.facebook.displayName,
                            profilePictureURL: authData.facebook.profileImageURL
                        }
                    } else if (authData.provider === "password"){
                        local.loggedIn = true;
                    }
                    $('.login-link').hide();
                    $('.logout-link').show();
                } else {
                    $('.login-link').show();
                    $('.logout-link').hide();
                    console.log("User is logged out");
                }
            };


            return options;
        }());



</script>